{
  "name": "Sparklpy",
  "tagline": "module to create Tufte-style spark line plots",
  "body": "# sparklpy\r\n\r\n[![DOI](https://zenodo.org/badge/10115/fedhere/sparklpy.svg)](https://zenodo.org/badge/latestdoi/10115/fedhere/sparklpy)\r\n\r\n[![Code Health](https://landscape.io/github/fedhere/sparklpy/master/landscape.svg?style=flat)](https://landscape.io/github/fedhere/sparklpy/master)\r\n\r\n##module to create Tufte-style spark line plots\r\n\r\n(acknowledgement - the author thaks MTA for their service: this code was written almost entirely during NYC subway trips)\r\n\r\n\r\nthis is a pure module (a single .py and a single function really) that creates a sparkline plot a-la' Tufte.\r\n\r\nIt eats time series in the form of 2d numpy.ndarrays, or dataframes\r\n\r\nYou can control a number of settings including the figure layout (number of columns and rows) the colors that mark the minimum and maximum, the label format and size. \r\n\r\nIt will temporarely overwrite your rc.param, but no panic: it will reset them to your default before exiting the function.\r\n\r\nThe resulting plot will look something like this:\r\n\r\n![alt text](https://github.com/fedhere/sparklpy/blob/master/sparklines_example.png)\r\n\r\n\r\nThe upon calling it, with argument a nd.numpy array (shape = (n_observations, n_timestamps) or a dataframe (all columns must be nuerical values) the function returns a pylab figure object, which you can display (pl.show() ) or save (pl.savefig() ).\r\n\r\ninstall the package \"sparkleme\" as\r\n\r\n`python setup.py install `.\r\n\r\nor just save the sparkleme directory somwhere in your python path and call the module sparkleme.\r\nEither way import as\r\n\r\n`import sparkleme `\r\n\r\nand call, for example,  as  \r\n\r\n```\r\n\r\nfig = sparkleme.sparkleme(data)\r\n\r\nfig.show()\r\n\r\n```\r\n\r\nTo test that the module works run \r\n\r\n`sparkleme.sparkletest()`\r\n\r\nor you can use the sparkletest.ipynb Jupyter notebook.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}